type Ensemble @model {
  id: ID!
  name: String!
  videos: [Video] @connection(keyName: "byEnsemble", fields: ["id"])
  members: [Member] @connection(keyName: "byEnsemble", fields: ["id"])
}

interface Upload {
  id: ID!
  title: String!
}

type Video implements Upload @model @key(name: "byEnsemble", fields: ["ensembleID"]) @key(name: "byMember", fields: ["memberID"]) {
  id: ID!
  title: String!
  ensembleID: ID!
  ensemble: Ensemble! @connection(fields: ["ensembleID"])
  memberID: ID!
  member: Member @connection(fields: ["memberID"])
}

interface User {
  id: ID!
  name: String!
}

type Director implements User @model {
  id: ID!
  name: String!
}

type Member implements User @model @key(name: "byEnsemble", fields: ["ensembleID"]) {
  id: ID!
  name: String!
  videos: [Video] @connection(name: "byMember", fields: ["id"])
  ensembleID: ID!
  ensemble: [Ensemble] @connection(fields: ["ensembleID"])
  director: Boolean!
}
